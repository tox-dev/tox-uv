[build-system]
build-backend = "hatchling.build"
requires = [
  "hatch-vcs>=0.4",
  "hatchling>=1.21.1",
]

[project]
name = "tox-uv"
description = "Integration of uv with tox."
readme = "README.md"
keywords = [
  "environments",
  "isolated",
  "testing",
  "virtual",
]
license = "MIT"
maintainers = [{ name = "Bernát Gábor", email = "gaborjbernat@gmail.com" }]
requires-python = ">=3.8"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Internet",
  "Topic :: Software Development :: Libraries",
  "Topic :: System",
]
dynamic = [
  "version",
]
dependencies = [
  "tox<5,>=4.12.1",
  "uv<1,>=0.1.2",
]
optional-dependencies.test = [
  "covdefaults>=2.3",
  "devpi-process>=1",
  "pytest>=8.0.1",
  "pytest-cov>=4.1",
  "pytest-mock>=3.12",
]
urls.Documentation = "https://github.com/tox-dev/tox-uv#tox-uv"
urls.Homepage = "https://github.com/tox-dev/tox-uv"
urls.Source = "https://github.com/tox-dev/tox-uv"
urls.Tracker = "https://github.com/tox-dev/tox-uv/issues"
entry-points.tox = {"tox-uv" = "tox_uv.plugin"}

[tool.hatch]
build.hooks.vcs.version-file = "src/tox_uv/version.py"
build.targets.sdist.include = ["/src", "/tests"]
version.source = "vcs"

[tool.black]
line-length = 120

[tool.ruff]
line-length = 120
target-version = "py38"
lint.isort = { known-first-party = ["tox_uv", "tests"], required-imports = ["from __future__ import annotations"] }
lint.select = ["ALL"]
lint.ignore = [
  "ANN101", # Missing type annotation for `self` in method
  "D301",   #  Use `r"""` if any backslashes in a docstring
  "D205",   # 1 blank line required between summary line and description
  "D401",   # First line of docstring should be in imperative mood
  "D203",   # `one-blank-line-before-class` (D203) and `no-blank-line-before-class` (D211) are incompatible
  "D212",   # `multi-line-summary-first-line` (D212) and `multi-line-summary-second-line` (D213) are incompatible
  "S104",   # Possible binding to all interface
  "COM812", # Conflict with formatter
  "ISC001", # Conflict with formatter
  "CPY",    # No copyriuvt statements
  "D",      # no documentation for now
]
lint.preview = true
format.preview = true
format.docstring-code-format = true
format.docstring-code-line-length = 100
[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
  "S101",    # asserts allowed in tests...
  "FBT",     # don"t care about booleans as positional arguments in tests
  "INP001",  # no implicit namespace
  "D",       # don"t care about documentation in tests
  "S603",    # `subprocess` call: check for execution of untrusted input
  "PLR2004", # Magic value used in comparison, consider replacing with a constant variable
]

[tool.codespell]
builtin = "clear,usage,en-GB_to_en-US"
write-changes = true
count = true

[tool.coverage]
html.show_contexts = true
html.skip_covered = false
paths.source = ["src", ".tox/*/.venv/lib/*/site-packages", ".tox\\*\\.venv\\Lib\\site-packages", "**/src", "**\\src"]
paths.other = [".", "*/tox_uv", "*\\tox_uv"]
report.fail_under = 100
run.parallel = true
run.plugins = ["covdefaults"]

[tool.mypy]
python_version = "3.11"
show_error_codes = true
strict = true
overrides = [{ module = ["virtualenv.*"], ignore_missing_imports = true }]
