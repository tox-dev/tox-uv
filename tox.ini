[tox]
requires =
    tox>=4.2
    tox-uv>=1.11.2
env_list =
    fix
    3.13
    3.12
    3.11
    3.10
    3.9
    3.8
    type
    readme
skip_missing_interpreters = true

[testenv]
description = run the unit tests with pytest under {basepython}
package = wheel
wheel_build_env = .pkg
extras =
    test
set_env =
    COVERAGE_FILE = {toxworkdir}{/}.coverage.{envname}
commands =
    pytest {tty:--color=yes} {posargs: \
      --cov {envsitepackagesdir}{/}tox_uv --cov {toxinidir}{/}tests --cov-context=test \
      --no-cov-on-fail  --cov-config {toxinidir}{/}pyproject.toml \
      --cov-report term-missing:skip-covered  --junitxml {toxworkdir}{/}junit.{envname}.xml \
      --cov-report html:{envtmpdir}{/}htmlcov --durations=5 \
      tests}

[testenv:fix]
description = run static analysis and style check using flake8
skip_install = true
deps =
    pre-commit-uv>=4.1
pass_env =
    HOMEPATH
    PROGRAMDATA
commands =
    pre-commit run --all-files --show-diff-on-failure

[testenv:type]
description = run type check on code base
deps =
    mypy==1.11.2
set_env =
    {tty:MYPY_FORCE_COLOR = 1}
commands =
    mypy src {posargs}
    mypy tests {posargs}

[testenv:readme]
description = check that the package metadata is correct
skip_install = true
deps =
    build[virtualenv]>=1.2.2
    twine>=5.1.1
set_env =
    {tty:FORCE_COLOR = 1}
change_dir = {toxinidir}
commands =
    python -m build --sdist --wheel -o {envtmpdir} .
    twine check {envtmpdir}{/}*

[testenv:dev]
description = generate a DEV environment
package = editable
extras =
    test
commands =
    uv pip tree
    python -c 'import sys; print(sys.executable)'
